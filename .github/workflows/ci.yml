name: Deploy Frontend to Azure

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci || { echo "Dependency installation failed with error $?"; exit 1; }
          npm list --depth=0

      - name: Build
        run: |
          echo "Starting build process..."
          npm run build || { echo "Build failed with error $?"; cat *.log 2>/dev/null || echo "No log file"; exit 1; }
          ls -la
          if [ ! -d ".next" ]; then echo "Next.js build directory .next not found!"; exit 1; fi

      - name: Copy package.json for runtime
        run: cp package.json .next/package.json || { echo "Failed to copy package.json"; exit 1; }

      - name: Prepare deployment package
        run: |
          echo "Preparing deployment package..."
          rm -rf /tmp/deploy-package  # Clean previous package
          mkdir -p /tmp/deploy-package
          cp -r .next /tmp/deploy-package/.next
          cp package.json /tmp/deploy-package/package.json
          # Exclude all source files except .next and package.json
          find /tmp/deploy-package -mindepth 1 -not -path "*/.next/*" -not -name "package.json" -exec rm -rf {} +
          ls -la /tmp/deploy-package || echo "Deployment package preparation failed!"

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        continue-on-error: false

      - name: Deploy to Azure Web App with Custom Script
        run: |
          echo "Deploying to Azure Web App..."
          zip -r deploy.zip /tmp/deploy-package
          az webapp deploy --resource-group TradeMinutes-RG --name trademinutes-app --src-path deploy.zip --type zip --target-path /home/site/wwwroot
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Verify Deployed Package Contents
        run: |
          echo "Deployed package contents in wwwroot:"
          ls -la /home/site/wwwroot || echo "No wwwroot contents to verify!"